n = 439 #número de dias da modelagem
p = 100 #número de iterações por dia
h = 1/p #tamanho da iteração
semana = 7*p #duração do período de uma semana
pop = 1.483*10^6 #população da cidade de POA
tempo = n*p+1 #total da modelagem
ez = 150 #expostos iniciais
iz = 150 #infecciosos não diagnosticados iniciais
dz = 1025 #diagnosticados iniciais
#dia 19 de maio é n=1


OOO = 294 # Último dia da modelagem com dados reais. 294 é 08.03.21
yyy = 14 #duração do lockdown

qus = numeric(n)
for(j in 1:n){qus[j]=0.6}
quss = 2 #1 usa qus, 2 usa normal

#Definição das funções
{
  #################################### Definição das principais funções
  s = numeric(tempo)
  e = numeric(tempo)
  ia = numeric(tempo)
  is = numeric(tempo)
  r = numeric(tempo)
  ka = numeric(tempo)
  va = numeric(tempo)
  ds = numeric(tempo) #contagem
}
#### Coeficiente de isolamento social
qu = numeric(n)
q = numeric(tempo)
{qu[1] = 0.434
  qu[2] = 0.418
  qu[3] = 0.433
  qu[4] = 0.427
  qu[5] = 0.487
  qu[6] = 0.586
  qu[7] = 0.426
  qu[8] = 0.421
  qu[9] = 0.410
  qu[10] = 0.415
  qu[11] = 0.391
  qu[12] = 0.442
  qu[13] = 0.550
  qu[14] = 0.413
  qu[15] = 0.411
  qu[16] = 0.402
  qu[17] = 0.373
  qu[18] = 0.413
  qu[19] = 0.442
  qu[20] = 0.555
  qu[21] = 0.385
  qu[22] = 0.374
  qu[23] = 0.394
  qu[24] = 0.511
  qu[25] = 0.375
  qu[26] = 0.451
  qu[27] = 0.530
  qu[28] = 0.398
  qu[29] = 0.397
  qu[30] = 0.381
  qu[31] = 0.401
  qu[32] = 0.344
  qu[33] = 0.429
  qu[34] = 0.511
  qu[35] = 0.409
  qu[36] = 0.403
  qu[37] = 0.400
  qu[38] = 0.446
  qu[39] = 0.402
  qu[40] = 0.475
  qu[41] = 0.566
  qu[42] = 0.434
  qu[43] = 0.495
  qu[44] = 0.413
  qu[45] = 0.422
  qu[46] = 0.407
  qu[47] = 0.459
  qu[48] = 0.616
  qu[49] = 0.438
  qu[50] = 0.500
  qu[51] = 0.451
  qu[52] = 0.431
  qu[53] = 0.399
  qu[54] = 0.506
  qu[55] = 0.601
  qu[56] = 0.438
  qu[57] = 0.451
  qu[58] = 0.439
  qu[59] = 0.478
  qu[60] = 0.395
  qu[61] = 0.426
  qu[62] = 0.536
  qu[63] = 0.417
  qu[64] = 0.430
  qu[65] = 0.413
  qu[66] = 0.407
  qu[67] = 0.415
  qu[68] = 0.498
  qu[69] = 0.551
  qu[70] = 0.463
  qu[71] = 0.463
  qu[72] = 0.426
  qu[73] = 0.435
  qu[74] = 0.397
  qu[75] = 0.455
  qu[76] = 0.532
  qu[77] = 0.404
  qu[78] = 0.405
  qu[79] = 0.389
  qu[80] = 0.399
  qu[81] = 0.372
  qu[82] = 0.423
  qu[83] = 0.485
  qu[84] = 0.401
  qu[85] = 0.417
  qu[86] = 0.425
  qu[87] = 0.433
  qu[88] = 0.379
  qu[89] = 0.454
  qu[90] = 0.522
  qu[91] = 0.394
  qu[92] = 0.395
  qu[93] = 0.394
  qu[94] = 0.398
  qu[95] = 0.384
  qu[96] = 0.449
  qu[97] = 0.530
  qu[98] = 0.393
  qu[99] = 0.389
  qu[100] = 0.382
  qu[101] = 0.387
  qu[102] = 0.389
  qu[103] = 0.446
  qu[104] = 0.591
  qu[105] = 0.398
  qu[106] = 0.394
  qu[107] = 0.370
  qu[108] = 0.411
  qu[109] = 0.346
  qu[110] = 0.459
  qu[111] = 0.588
  qu[112] = 0.543
  qu[113] = 0.362
  qu[114] = 0.360
  qu[115] = 0.370
  qu[116] = 0.358
  qu[117] = 0.444
  qu[118] = 0.548
  qu[119] = 0.381
  qu[120] = 0.371
  qu[121] = 0.411
  qu[122] = 0.371
  qu[123] = 0.334
  qu[124] = 0.414
  qu[125] = 0.494
  qu[126] = 0.369
  qu[127] = 0.353
  qu[128] = 0.347
  qu[129] = 0.356
  qu[130] = 0.348
  qu[131] = 0.408
  qu[132] = 0.565
  qu[133] = 0.370
  qu[134] = 0.359
  qu[135] = 0.374
  qu[136] = 0.365
  qu[137] = 0.372
  qu[138] = 0.477
  qu[139] = 0.563
  qu[140] = 0.364
  qu[141] = 0.343
  qu[142] = 0.346
  qu[143] = 0.346
  qu[144] = 0.307
  qu[145] = 0.349
  qu[146] = 0.468
  qu[147] = 0.467
  qu[148] = 0.348
  qu[149] = 0.340
  qu[150] = 0.345
  qu[151] = 0.335
  qu[152] = 0.394
  qu[153] = 0.489
  qu[154] = 0.357
  qu[155] = 0.350
  qu[156] = 0.354
  qu[157] = 0.348
  qu[158] = 0.323
  qu[159] = 0.401
  qu[160] = 0.486
  qu[161] = 0.359
  qu[162] = 0.374
  qu[163] = 0.345
  qu[164] = 0.345
  qu[165] = 0.338
  qu[166] = 0.391
  qu[167] = 0.489
  qu[168] = 0.499
  qu[169] = 0.340
  qu[170] = 0.336
  qu[171] = 0.346
  qu[172] = 0.336
  qu[173] = 0.398
  qu[174] = 0.509
  qu[175] = 0.366
  qu[176] = 0.352
  qu[177] = 0.350
  qu[178] = 0.353
  qu[179] = 0.351
  qu[180] = 0.416
  qu[181] = 0.378
  qu[182] = 0.378
  qu[183] = 0.352
  qu[184] = 0.357
  qu[185] = 0.356
  qu[186] = 0.347
  qu[187] = 0.416
  qu[188] = 0.518
  qu[189] = 0.369
  qu[190] = 0.364
  qu[191] = 0.354
  qu[192] = 0.360
  qu[193] = 0.351
  qu[194] = 0.423
  qu[195] = 0.425
  qu[196] = 0.369
  qu[197] = 0.354
  qu[198] = 0.344
  qu[199] = 0.349
  qu[200] = 0.337
  qu[201] = 0.409
  qu[202] = 0.541
  qu[203] = 0.367
  qu[204] = 0.356
  qu[205] = 0.348
  qu[206] = 0.352
  qu[207] = 0.346
  qu[208] = 0.427
  qu[209] = 0.535
  qu[210] = 0.366
  qu[211] = 0.353
  qu[212] = 0.354
  qu[213] = 0.350
  qu[214] = 0.340
  qu[215] = 0.408
  qu[216] = 0.503
  qu[217] = 0.347
  qu[218] = 0.343
  qu[219] = 0.335
  qu[220] = 0.374
  qu[221] = 0.504
  qu[222] = 0.477
  qu[223] = 0.551
  qu[224] = 0.380
  qu[225] = 0.375
  qu[226] = 0.319
  qu[227] = 0.365
  qu[228] = 0.522
  qu[229] = 0.486
  qu[230] = 0.547
  qu[231] = 0.351
  qu[232] = 0.363
  qu[233] = 0.361
  qu[234] = 0.361
  qu[235] = 0.356
  qu[236] = 0.427
  qu[237] = 0.529
  qu[238] = 0.368
  qu[239] = 0.359
  qu[240] = 0.356
  qu[241] = 0.333
  qu[242] = 0.346
  qu[243] = 0.450
  qu[244] = 0.539
  qu[245] = 0.346
  qu[246] = 0.348
  qu[247] = 0.351
  qu[248] = 0.357
  qu[249] = 0.358
  qu[250] = 0.432
  qu[251] = 0.530
  qu[252] = 0.368
  qu[253] = 0.364
  qu[254] = 0.362
  qu[255] = 0.355
  qu[256] = 0.345
  qu[257] = 0.431
  qu[258] = 0.540
  qu[259] = 0.385
  qu[260] = 0.522
  qu[261] = 0.374
  qu[262] = 0.371
  qu[263] = 0.342
  qu[264] = 0.419
  qu[265] = 0.516
  qu[266] = 0.363
  qu[267] = 0.350
  qu[268] = 0.341
  qu[269] = 0.346
  qu[270] = 0.342
  qu[271] = 0.407
  qu[272] = 0.514
  qu[273] = 0.447
  qu[274] = 0.495
  qu[275] = 0.368
  qu[276] = 0.357
  qu[277] = 0.307
  qu[278] = 0.383
  qu[279] = 0.489
  qu[280] = 0.331
  qu[281] = 0.334
  qu[282] = 0.324
  qu[283] = 0.323
  qu[284] = 0.308
  qu[285] = 0.425
  qu[286] = 0.531
  qu[287] = 0.370
  qu[288] = 0.376
  qu[289] = 0.367
  qu[290] = 0.394
  qu[291] = 0.363
  qu[292] = 0.425
  qu[293] = 0.542
  qu[294] = 0.369
  qu[295] = 0.381
  qu[296] = 0.360
  qu[297] = 0.371
  qu[298] = 0.355
  qu[299] = 0.432
}


#Isolamento social médio
for(j in (300):n){qu[j]=0.416}

#Períodos de lockdown
for(j in (306):(319)){qu[j]=0.6}

for(j in (369):(382)){qu[j]=0.6}

#for(j in (348):(361)){qu[j]=0.6}
#for(j in (390):(403)){qu[j]=0.6}

if(quss == 1){qk = qus}
if(quss == 2){qk = qu}

{
  for(j in 1:n){
    for(k in ((j-1)*p+1):(j*p)){q[k]=qk[j]}
  }
}
#################################### Definição dos coeficientes
{
  mu=1/5.1   
  rhoa=0.43 
  rhos=1-rhoa 
  thea=0.1
  thes=1
  la=1/8 
  ls=1/3 
}
#################################### Condições iniciais
{
  e[1]=ez/pop
  s[1]=1
  is[1]=iz/pop #infecciosos não diagnosticados iniciais
  ia[1]=(rhoa/rhos)*is[1]
  r[1]=0
  ds[1]=dz/pop #infecciosos diagnosticados iniciais
}
#################################### Coeficiente Alpha
al = numeric(tempo)
{for(j in (0*semana+1):(1*semana)){al[j]=1.3}
{for(j in (1*semana+1):(2*semana)){al[j]=1.4} #Sem = 2
for(j in (2*semana+1):(3*semana)){al[j]=1.4} #Sem = 3
for(j in (3*semana+1):(4*semana)){al[j]=1} #Sem = 4
for(j in (4*semana+1):(5*semana)){al[j]=0.8} #Sem = 5
for(j in (5*semana+1):(6*semana)){al[j]=1.5} #Sem = 6
for(j in (6*semana+1):(7*semana)){al[j]=1.6} #Sem = 7
for(j in (7*semana+1):(8*semana)){al[j]=0.8} #Sem = 8
for(j in (8*semana+1):(9*semana)){al[j]=1.4} #Sem = 9
for(j in (9*semana+1):(10*semana)){al[j]=1.0} #Sem = 10
for(j in (10*semana+1):(11*semana)){al[j]=0.8} #Sem = 11
for(j in (11*semana+1):(12*semana)){al[j]=0.7} #Sem = 12
for(j in (12*semana+1):(13*semana)){al[j]=1.2} #Sem = 13
for(j in (13*semana+1):(14*semana)){al[j]=0.8} #Sem = 14
for(j in (14*semana+1):(15*semana)){al[j]=0.6} #Sem = 15
for(j in (15*semana+1):(16*semana)){al[j]=0.8} #Sem = 16
for(j in (16*semana+1):(17*semana)){al[j]=1.1} #Sem = 17
for(j in (17*semana+1):(18*semana)){al[j]=0.8} #Sem = 18
for(j in (18*semana+1):(19*semana)){al[j]=0.8} #Sem = 19
for(j in (19*semana+1):(20*semana)){al[j]=0.8} #Sem = 20
for(j in (20*semana+1):(21*semana)){al[j]=0.8} #Sem = 21
for(j in (21*semana+1):(22*semana)){al[j]=1} #Sem = 22
for(j in (22*semana+1):(23*semana)){al[j]=0.9} #Sem = 23
for(j in (23*semana+1):(24*semana)){al[j]=0.7}} #Sem = 24
for(j in (24*semana+1):(25*semana)){al[j]=1.0} #Sem = 25
for(j in (25*semana+1):(26*semana)){al[j]=1.2} #Sem = 26
for(j in (26*semana+1):(27*semana)){al[j]=1.1} #Sem = 27
for(j in (27*semana+1):(28*semana)){al[j]=0.9} #Sem = 28
for(j in (28*semana+1):(29*semana)){al[j]=0.8} #Sem = 29
for(j in (29*semana+1):(30*semana)){al[j]=0.6} #Sem = 30
for(j in (30*semana+1):(31*semana)){al[j]=0.6} #Sem = 31
for(j in (31*semana+1):(32*semana)){al[j]=0.8} #Sem = 32
for(j in (32*semana+1):(33*semana)){al[j]=1}} #Sem = 33
for(j in (33*semana+1):(34*semana)){al[j]=0.9} #Sem = 34
for(j in (34*semana+1):(35*semana)){al[j]=0.8} #Sem = 35
for(j in (35*semana+1):(36*semana)){al[j]=0.7} #Sem = 36
for(j in (36*semana+1):(37*semana)){al[j]=0.7} #Sem = 37
for(j in (37*semana+1):(38*semana)){al[j]=1.7} #Sem = 38
for(j in (38*semana+1):(39*semana)){al[j]=1.5} #Sem = 39
for(j in (39*semana+1):(40*semana)){al[j]=1.3} #Sem = 40
for(j in (40*semana+1):(41*semana)){al[j]=1.1} #Sem = 41
for(j in (41*semana+1):(42*semana)){al[j]=1.1} #Sem = 42
for(j in (42*semana+1):(tempo)){al[j]=1.2}


##############Vacinados
mediavac=2000
Vac = numeric(n)
{Vac[259] = 7
  Vac[260] = 7
  Vac[261] = 7
  Vac[262] = 8
  Vac[263] = 8
  Vac[264] = 8
  Vac[265] = 8
  Vac[266] = 59
  Vac[267] = 59
  Vac[268] = 120
  Vac[269] = 915
  Vac[270] = 2957
  Vac[271] = 3223
  Vac[272] = 3223
  Vac[273] = 4477
  Vac[274] = 8148
  Vac[275] = 13568
  Vac[276] = 19900
  Vac[277] = 24039
  Vac[278] = 24706
  Vac[279] = 24827
  Vac[280] = 28279
  Vac[281] = 30339
  Vac[282] = 31855
  Vac[283] = 33687
  Vac[284] = 35379
  Vac[285] = 35568
  Vac[286] = 35568
  Vac[287] = 37314
  Vac[288] = 38869
  Vac[289] = 40767
  Vac[290] = 42298
  Vac[291] = 45842
  Vac[292] = 46110
  Vac[293] = 46110
  Vac[294] = 48331
  Vac[295] = 50332
  Vac[296] = 54283
  Vac[297] = 58699
  Vac[298] = 61940
  Vac[299] = 62492
}
for(j in 300:n){Vac[j+1]=Vac[j]+mediavac}

for(j in 15:n){
  for(k in 1:p){
    va[((j-1)*p+k)]=Vac[(j-14)]/pop
  }
}




##########################Sistema de equações
{for(j in 1:tempo){
  ka[j]=thea*ia[j]+thes*is[j]
  s[j+1]=s[j]-h*al[j]*(1-q[j])*(1-va[j])*s[j]*ka[j]
  e[j+1]=e[j]+h*(al[j]*(1-q[j])*(1-va[j])*s[j]*ka[j]-mu*e[j])
  ia[j+1]=ia[j]+h*(mu*rhoa*e[j]-la*ia[j])
  is[j+1]=is[j]+h*(mu*rhos*e[j]-ls*is[j])
  r[j+1]=r[j]+h*(la*ia[j]+ls*is[j])
  ds[j+1]=ds[j]+h*ls*is[j]
  }
}
##########################Discretização
{
  S = numeric(n)
  E = numeric(n)
  Ia= numeric(n)
  Is= numeric(n)
  R = numeric(n)
  alphdiscr = numeric(n)
  Dtot = numeric(n)
  for(j in 1:n){
    S[j]= s[(j-1)*p+1]*pop
    E[j]= e[(j-1)*p+1]*pop
    Ia[j]= ia[(j-1)*p+1]*pop
    Is[j]= is[(j-1)*p+1]*pop
    R[j]= r[(j-1)*p+1]*pop
    Dtot[j]= ds[(j-1)*p+1]*pop
    alphdiscr[j]= al[(j-1)*p+1]
  }
}

############Casos oficiais
Of = numeric(n)
{Of[1] = 1025
  Of[2] = 1075
  Of[3] = 1108
  Of[4] = 1149
  Of[5] = 1165
  Of[6] = 1193
  Of[7] = 1243
  Of[8] = 1299
  Of[9] = 1339
  Of[10] = 1381
  Of[11] = 1452
  Of[12] = 1481
  Of[13] = 1493
  Of[14] = 1566
  Of[15] = 1628
  Of[16] = 1743
  Of[17] = 1822
  Of[18] = 1913
  Of[19] = 1960
  Of[20] = 1991
  Of[21] = 2109
  Of[22] = 2251
  Of[23] = 2353
  Of[24] = 2397
  Of[25] = 2499
  Of[26] = 2547
  Of[27] = 2619
  Of[28] = 2724
  Of[29] = 2843
  Of[30] = 2998
  Of[31] = 3127
  Of[32] = 3217
  Of[33] = 3259
  Of[34] = 3359
  Of[35] = 3513
  Of[36] = 3649
  Of[37] = 3797
  Of[38] = 3934
  Of[39] = 4062
  Of[40] = 4140
  Of[41] = 4184
  Of[42] = 4366
  Of[43] = 4594
  Of[44] = 4751
  Of[45] = 4996
  Of[46] = 5234
  Of[47] = 5388
  Of[48] = 5444
  Of[49] = 5797
  Of[50] = 6071
  Of[51] = 6369
  Of[52] = 6612
  Of[53] = 6949
  Of[54] = 7028
  Of[55] = 7154
  Of[56] = 7478
  Of[57] = 7779
  Of[58] = 8110
  Of[59] = 8447
  Of[60] = 8806
  Of[61] = 8965
  Of[62] = 9307
  Of[63] = 9640
  Of[64] = 10127
  Of[65] = 10579
  Of[66] = 11033
  Of[67] = 11465
  Of[68] = 11969
  Of[69] = 12046
  Of[70] = 12466
  Of[71] = 12814
  Of[72] = 13154
  Of[73] = 13536
  Of[74] = 14161
  Of[75] = 14466
  Of[76] = 14687
  Of[77] = 15240
  Of[78] = 15684
  Of[79] = 16121
  Of[80] = 16537
  Of[81] = 16914
  Of[82] = 17021
  Of[83] = 17097
  Of[84] = 17644
  Of[85] = 18122
  Of[86] = 18541
  Of[87] = 18973
  Of[88] = 19607
  Of[89] = 20106
  Of[90] = 20423
  Of[91] = 20990
  Of[92] = 21495
  Of[93] = 22010
  Of[94] = 22285
  Of[95] = 22707
  Of[96] = 22862
  Of[97] = 22971
  Of[98] = 23538
  Of[99] = 24052
  Of[100] = 24477
  Of[101] = 24881
  Of[102] = 25585
  Of[103] = 25687
  Of[104] = 25763
  Of[105] = 26236
  Of[106] = 26633
  Of[107] = 27010
  Of[108] = 27368
  Of[109] = 27758
  Of[110] = 27887
  Of[111] = 27942
  Of[112] = 28088
  Of[113] = 28628
  Of[114] = 29373
  Of[115] = 29872
  Of[116] = 30219
  Of[117] = 30351
  Of[118] = 30472
  Of[119] = 31037
  Of[120] = 31442
  Of[121] = 31808
  Of[122] = 32270
  Of[123] = 32652
  Of[124] = 32758
  Of[125] = 32845
  Of[126] = 33370
  Of[127] = 33704
  Of[128] = 34062
  Of[129] = 34398
  Of[130] = 34757
  Of[131] = 34980
  Of[132] = 35055
  Of[133] = 35669
  Of[134] = 36287
  Of[135] = 36697
  Of[136] = 37066
  Of[137] = 37368
  Of[138] = 37522
  Of[139] = 37639
  Of[140] = 38191
  Of[141] = 38688
  Of[142] = 39064
  Of[143] = 39393
  Of[144] = 39717
  Of[145] = 39868
  Of[146] = 39966
  Of[147] = 40080
  Of[148] = 40490
  Of[149] = 41043
  Of[150] = 41414
  Of[151] = 41891
  Of[152] = 41931
  Of[153] = 42239
  Of[154] = 42753
  Of[155] = 43147
  Of[156] = 43543
  Of[157] = 43962
  Of[158] = 44418
  Of[159] = 44496
  Of[160] = 44581
  Of[161] = 45504
  Of[162] = 45848
  Of[163] = 46245
  Of[164] = 46740
  Of[165] = 47286
  Of[166] = 47454
  Of[167] = 47647
  Of[168] = 47785
  Of[169] = 48270
  Of[170] = 48796
  Of[171] = 49262
  Of[172] = 49611
  Of[173] = 49832
  Of[174] = 50088
  Of[175] = 50646
  Of[176] = 51160
  Of[177] = 51639
  Of[178] = 52366
  Of[179] = 52872
  Of[180] = 53013
  Of[181] = 53438
  Of[182] = 54004
  Of[183] = 54853
  Of[184] = 55472
  Of[185] = 55966
  Of[186] = 56436
  Of[187] = 57004
  Of[188] = 57342
  Of[189] = 58076
  Of[190] = 58578
  Of[191] = 59473
  Of[192] = 60093
  Of[193] = 60747
  Of[194] = 61459
  Of[195] = 61758
  Of[196] = 63041
  Of[197] = 63707
  Of[198] = 64474
  Of[199] = 65342
  Of[200] = 66200
  Of[201] = 66337
  Of[202] = 66471
  Of[203] = 67770
  Of[204] = 68629
  Of[205] = 69146
  Of[206] = 70139
  Of[207] = 70873
  Of[208] = 71227
  Of[209] = 71299
  Of[210] = 72211
  Of[211] = 73050
  Of[212] = 73630
  Of[213] = 74074
  Of[214] = 74859
  Of[215] = 74968
  Of[216] = 75032
  Of[217] = 76044
  Of[218] = 76543
  Of[219] = 77026
  Of[220] = 77435
  Of[221] = 77497
  Of[222] = 77776
  Of[223] = 77828
  Of[224] = 78786
  Of[225] = 79258
  Of[226] = 79723
  Of[227] = 80085
  Of[228] = 80125
  Of[229] = 80238
  Of[230] = 80312
  Of[231] = 80796
  Of[232] = 81599
  Of[233] = 82106
  Of[234] = 82754
  Of[235] = 83194
  Of[236] = 83294
  Of[237] = 83393
  Of[238] = 83921
  Of[239] = 84504
  Of[240] = 84947
  Of[241] = 85626
  Of[242] = 86061
  Of[243] = 86161
  Of[244] = 86241
  Of[245] = 87110
  Of[246] = 87456
  Of[247] = 87849
  Of[248] = 88191
  Of[249] = 88534
  Of[250] = 88582
  Of[251] = 88800
  Of[252] = 89154
  Of[253] = 89430
  Of[254] = 89771
  Of[255] = 90031
  Of[256] = 90486
  Of[257] = 90589
  Of[258] = 90637
  Of[259] = 91023
  Of[260] = 91186
  Of[261] = 91576
  Of[262] = 91922
  Of[263] = 92372
  Of[264] = 92506
  Of[265] = 92662
  Of[266] = 93213
  Of[267] = 93628
  Of[268] = 94038
  Of[269] = 94722
  Of[270] = 95271
  Of[271] = 95397
  Of[272] = 95817
  Of[273] = 96570
  Of[274] = 97111
  Of[275] = 97954
  Of[276] = 98904
  Of[277] = 100034
  Of[278] = 100459
  Of[279] = 100680
  Of[280] = 102400
  Of[281] = 103645
  Of[282] = 104948
  Of[283] = 105995
  Of[284] = 106636
  Of[285] = 106838
  Of[286] = 107112
  Of[287] = 108998
  Of[288] = 110442
  Of[289] = 111432
  Of[290] = 112580
  Of[291] = 113608
  Of[292] = 114083
  Of[293] = 114337
  Of[294] = 115472
}




gurururu = numeric(n)
for(j in 1:n){gurururu[j]=round(Dtot[j])}

ndias = numeric(n)
for(j in 1:n){ndias[j]=j+43921}

resultado = data.frame(Modelagem = gurururu, Alpha = alphdiscr, Ofic = Of)
write.csv(resultado,"C:\\Dataframe\\POAprojeta.csv", row.names = TRUE)

